-- select all films where length is longer than the average of all films
select * from film
where length > (select avg(length) from film);

-- return all films that are available in inventory in store 2 more than 3 times
select * from film 
where film_id in (
select film_id from inventory
where store_id = 2
group by film_id
having count(*) > 3);

-- return first_name and last_name of customers who have made payment on '2020-01-25'
select first_name, last_name from customer
where customer_id in (
	select customer_id from payment
	where date(payment_date) = '2020-01-25');

-- return first_name and email of customers that have spent more than 30$
select first_name,email from customer
where customer_id in (
	select customer_id from payment
	group by customer_id
	having sum(amount) > 30);

-- return customers' first and last names that are from California and have spent more than 100
select first_name,last_name from customer
join address on address.address_id = customer.address_id
where customer_id in (
	select customer_id from payment
	group by customer_id
	having sum(amount) > 100)
and address.district = 'California';

-- find average total amount spent per day (avg daily revenue)
select round(avg(amount_per_day),2) as daily_avg_revenue
from
(select sum(amount) as amount_per_day, date(payment_date) from payment
group by date(payment_date))as a;

-- show all the payments together with how much the payment amount is below the maximum payment amount
select *,((select max(amount)from payment)-amount) as difference
from payment;

-- show only those payments that have highest amount per customer
select * from payment p1
where amount = (select max(amount) from payment p2 where
 p1.customer_id = p2.customer_id)
 order by customer_id;

-- show only those movie ttles,their associsted film_id and replacement cost with the lowest 
-- replacement cost for in each rating category - also show the rating.
select title,film_id,replacement_cost,rating from film f1
where replacement_cost = (select min(replacement_cost) from film f2
	where f1.rating = f2.rating);

-- show only those movie ttles,their associsted film_id and length that have highest length in
-- each rating category - also show rating
 select title,film_id,length,rating from film f1
where length = (select max(length) from film f2
	where f1.rating = f2.rating);

-- show all payments plus the total amount for every customer as welll as the number
-- of payments of each customer
select *,(select sum(amount) from payment p2
	where p1.customer_id = p2.customer_id) as sum_amount,
	(select count(*) from payment p3
	where p3.customer_id = p1.customer_id) as count_payment
from payment p1
order by customer_id,amount desc;

-- show films with highest replacement cost in their rating category plus the 
-- average replacement cost in their rating category
select title,replacement_cost,rating,
	(select avg(replacement_cost) from film f3
	where f1.rating = f3.rating) as avg_replacement_cost
from film f1
where replacement_cost = (select max(replacement_cost) from film f2
	where f1.rating = f2.rating)
order by title;

-- show only those payments with highest payment for each customer's first name
-- including the payment_id of that payment 
select first_name,amount,payment_id
from payment p1 join customer c on p1.customer_id = c.customer_id
where amount = (select max(amount) from payment p2
	where p1.customer_id = p2.customer_id)












